import React, { useState } from "react";
import { useLocation, useNavigate, Link } from "react-router-dom";

export function ResetPasswordPage() {
  const [newPassword, setNewPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [error, setError] = useState("");
  const [success, setSuccess] = useState("");
  const navigate = useNavigate();
  const query = new URLSearchParams(useLocation().search);
  const token = query.get("token"); // ‚úÖ l·∫•y token t·ª´ URL

  const validatePassword = (password) => {
    return /^(?=.*[@$!%*?&]).{8,}$/.test(password);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError("");
    setSuccess("");

    if (newPassword !== confirmPassword) {
      setError("M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp");
      return;
    }

    if (!validatePassword(newPassword)) {
      setError("M·∫≠t kh·∫©u ph·∫£i tr√™n 8 k√Ω t·ª± v√† c√≥ √≠t nh·∫•t 1 k√Ω t·ª± ƒë·∫∑c bi·ªát");
      return;
    }

    try {
      const res = await fetch("http://localhost:5000/api/auth/reset-password", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ token, password: newPassword }),
      });

      const data = await res.json();

      if (!res.ok) {
        setError(data.message || "ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u th·∫•t b·∫°i");
        return;
      }

      setSuccess("üéâ ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u th√†nh c√¥ng! ƒêang chuy·ªÉn h∆∞·ªõng...");
      setTimeout(() => navigate("/login"), 2000);
    } catch (err) {
      setError("L·ªói server, vui l√≤ng th·ª≠ l·∫°i sau");
    }
  };

  return (
    <div className="flex-1 flex items-center justify-center p-4">
      <div className="w-full max-w-md">
        <div className="bg-white p-8 rounded-lg shadow-md">
          <h1 className="text-2xl font-bold text-center text-green-500 mb-6">
            ƒê·∫∑t L·∫°i M·∫≠t Kh·∫©u
          </h1>

          {error && <div className="text-red-500 text-sm mb-4">{error}</div>}
          {success && (
            <div className="text-green-600 text-sm mb-4">{success}</div>
          )}

          <form className="space-y-4" onSubmit={handleSubmit}>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                M·∫≠t kh·∫©u m·ªõi
              </label>
              <input
                type="password"
                value={newPassword}
                onChange={(e) => setNewPassword(e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                required
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                X√°c nh·∫≠n m·∫≠t kh·∫©u
              </label>
              <input
                type="password"
                value={confirmPassword}
                onChange={(e) => setConfirmPassword(e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                required
              />
            </div>

            <button
              type="submit"
              className="w-full bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 transition duration-200"
            >
              L∆∞u m·∫≠t kh·∫©u m·ªõi
            </button>
          </form>

          <p className="mt-8 text-center text-sm text-gray-600">
            Nh·ªõ m·∫≠t kh·∫©u?{" "}
            <Link
              to="/login"
              className="font-medium text-green-600 hover:text-green-500 ml-1"
            >
              ƒêƒÉng nh·∫≠p
            </Link>
          </p>
        </div>
      </div>
    </div>
  );
}

export default ResetPasswordPage;
